import React, { useState, useEffect } from 'react';
import { HashRouter, Route, Routes } from 'react-router-dom';
import Home from './Pages/Home';
// ... рдмрд╛рдХреА рд╕рднреА рдкреЗрдЬ рдЗрдореНрдкреЛрд░реНрдЯреНрд╕ ...
import Rings from './Pages/Rings';
import RingsProduct from './Pages/RingsProduct';
import Earing from './Pages/Earing';
import Bracelate from './Pages/Bracelate';
import Dailywear from './Pages/Dailywear';
import Collection from './Pages/Collection';
import Gift from './Pages/Gift';
import Dashboard from './Admin Panel/Dashboard';
import AddToCart from './Pages/AddToCart';
import Checkout from './Pages/Checkout';
import BuyNow from './Pages/BuyNow';
import WishList from './Pages/WishList';
import OurStore from './Pages/OurStore';
import Nacklace from './Pages/Nacklace';
import NacklaceSet from './Pages/NacklaceSet';
import Bangles from './Pages/Bangles';
import Nosepin from './Pages/Nosepin';
import CategoryCollection from './Pages/CategoryCollection';
import ProductInfo from './Pages/ProductInfo';
import ScrollTo from './Components/ScrollTo';
import Profile from './Pages/Profile';

// ЁЯСЗ Preloader рдХреЛ рдЗрдореНрдкреЛрд░реНрдЯ рдХрд░реЗрдВ
import Preloader from './Components/Preloader'; 


function App() {
  // 1. рд╕реНрдЯреЗрдЯ (State) рдЬреЛ рдмрддрд╛рддрд╛ рд╣реИ рдХрд┐ рдПрдкреНрд▓реАрдХреЗрд╢рди рдЕрднреА рд▓реЛрдб рд╣реЛ рд░рд╣рд╛ рд╣реИ рдпрд╛ рдирд╣реАрдВ
  const [isAppLoading, setIsAppLoading] = useState(true);

  // 2. useEffect рдЬреЛ рдХреЗрд╡рд▓ рдкрд╣рд▓реА рдмрд╛рд░ рдХрдВрдкреЛрдиреЗрдВрдЯ рдорд╛рдЙрдВрдЯ рд╣реЛрдиреЗ рдкрд░ рдЪрд▓реЗрдЧрд╛
  useEffect(() => {
    // рдпрд╣рд╛рдБ рдЖрдк рдЕрдкрдиреА рд╡рд╛рд╕реНрддрд╡рд┐рдХ рдбреЗрдЯрд╛ рдлреЗрдЪрд┐рдВрдЧ рд▓реЙрдЬрд┐рдХ (real data fetching logic) рд▓рдЧрд╛ рд╕рдХрддреЗ рд╣реИрдВред
    // рдЕрднреА 2 рд╕реЗрдХрдВрдб рдХрд╛ рдЯрд╛рдЗрдорд░ (Timer) рдЗрд╕реНрддреЗрдорд╛рд▓ рдХрд░ рд░рд╣реЗ рд╣реИрдВред
    const timer = setTimeout(() => {
      setIsAppLoading(false); // рд▓реЛрдбрд░ рдХреЛ 2 рд╕реЗрдХрдВрдб рдмрд╛рдж рдЫреБрдкрд╛ рджреЗрдВ
    }, 2000); 

    // рдХреНрд▓реАрдирдЕрдк рдлрдВрдХреНрд╢рди (Cleanup Function)
    return () => clearTimeout(timer);
  }, []); // <-- рдЦрд╛рд▓реА рдПрд░реЗ (empty array) рдЗрд╕реЗ рдХреЗрд╡рд▓ рдПрдХ рдмрд╛рд░ рдЪрд▓рдиреЗ рдХреЗ рд▓рд┐рдП рдмрд╛рдзреНрдп рдХрд░рддрд╛ рд╣реИ

  // 3. рдХрдВрдбреАрд╢рди (Condition) рдЪреЗрдХ: рдЕрдЧрд░ рд▓реЛрдб рд╣реЛ рд░рд╣рд╛ рд╣реИ, рддреЛ рд╕рд┐рд░реНрдлрд╝ Preloader рджрд┐рдЦрд╛рдУ
  if (isAppLoading) {
    return <Preloader />;
  }

  // 4. рдЬрдм рд▓реЛрдбрд┐рдВрдЧ рдкреВрд░реА рд╣реЛ рдЬрд╛рдП (isAppLoading: false), рддреЛ рдкреВрд░рд╛ рдПрдкреНрд▓реАрдХреЗрд╢рди рд░реЗрдВрдбрд░ рдХрд░реЗрдВ
  return (
    <HashRouter>
      <ScrollTo></ScrollTo>
      <Routes>
        <Route path='/' element={<Home></Home>}></Route>
        <Route path='/collection/:categorySlug' element={<CategoryCollection></CategoryCollection>}></Route>
        <Route path='/product-info/:id' element={<ProductInfo></ProductInfo>}></Route>
        <Route path='/product/:id' element={<RingsProduct></RingsProduct>}></Route>
        <Route path='/rings' element={<Rings></Rings>}></Route>
        <Route path='/earings' element={<Earing></Earing>}></Route>
        <Route path='/bracelate' element={<Bracelate></Bracelate>}></Route>
        <Route path='/daily-wear' element={<Dailywear></Dailywear>}></Route>
        <Route path='/collection' element={<Collection></Collection>}></Route>
        <Route path='/gift' element={<Gift></Gift>}></Route>
        <Route path='/nacklace' element={<Nacklace></Nacklace>}></Route>
        <Route path='/nacklace-set' element={<NacklaceSet></NacklaceSet>}></Route>
        <Route path='/nose-pin' element={<Nosepin></Nosepin>}></Route>
        <Route path='/bangels' element={<Bangles></Bangles>}></Route>
        <Route path='/add-cart' element={<AddToCart></AddToCart>}></Route>
        <Route path='/check-out' element={<Checkout></Checkout>}></Route>
        <Route path='/buy-now' element={<BuyNow></BuyNow>}></Route>
        <Route path='/wish-list' element={<WishList></WishList>}></Route>
        <Route path='/our-store' element={<OurStore></OurStore>}></Route>
        <Route path='/profile' element={<Profile></Profile>}></Route>
        {/* Admin Routes */}
        <Route path='/dashboard' element={<Dashboard></Dashboard>}></Route>
      </Routes>
    </HashRouter>
  );
}

export default App;